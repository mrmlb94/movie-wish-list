<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	
	
	
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.6</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	
	
	
	<groupId>com.example</groupId>
	<artifactId>film-wish-list</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>movie-wish-list</name>
	<description>movie wish list project for Spring Boot</description>
	<url/>
	
	<licenses>
	<license/>
	</licenses>
	
	
	<developers>
		<developer/>
	</developers>
	
	
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	
	
	<properties>
  <configuration-dockerComposeFile>${project.basedir}/docker-compose.yml</configuration-dockerComposeFile>
		<java.version>21</java.version>    <!--change from 17 to 21 for PIT -->


	</properties>
	<dependencyManagement>
			<dependencies>
        <!-- Needed to run JUnit 5 tests -->
		<dependency>
		    <groupId>org.pitest</groupId>
		    <artifactId>pitest-junit5-plugin</artifactId>
		    <version>1.2.1</version>
		</dependency>
			<!-- webdrivermanager auto-resolves Chrome/Firefox/Edge driver versions. -->
		<dependency>
		    <groupId>org.seleniumhq.selenium</groupId>
		    <artifactId>selenium-java</artifactId>
		    <version>4.24.0</version>
		</dependency>
		
		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-api</artifactId>
		    <version>2.23.1</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-core</artifactId>
		    <version>2.23.1</version>
		</dependency>
				<!-- https://mvnrepository.com/artifact/org.jacoco/jacoco-maven-plugin -->
				<dependency>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.12</version>
				</dependency>

			</dependencies>

</dependencyManagement>

	
		<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web-services</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-test</artifactId>
		    <scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-testcontainers</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>mongodb</artifactId>
			<scope>test</scope>
		</dependency>




		<dependency>
			<groupId>io.github.bonigarcia</groupId>
			<artifactId>webdrivermanager</artifactId>
			<version>6.3.1</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<scope>test</scope>
		</dependency>

</dependencies>

<build>
    <plugins>



		<plugin>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-maven-plugin</artifactId>
			<version>3.5.6</version>
			<executions>
				<execution>
					<goals>
						<goal>repackage</goal>
					</goals>
				</execution>
			</executions>
		</plugin>


		<!-- Surefire: runs unit tests -->
	<plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-surefire-plugin</artifactId>
		<version>3.2.5</version> <!-- works with JUnit 5.11 -->
		<configuration>

			<includes>
	            <include>**/*Test.java</include>
	        </includes>
			<excludes> <!-- we EXCLUDE E2E tests from Surefire -->
				<exclude>**/*E2ETest.java</exclude>
			</excludes>
		</configuration>
	</plugin>
		<!-- PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT  -->
		<plugin>
			<groupId>org.pitest</groupId>
			<artifactId>pitest-maven</artifactId>
			<version>1.19.4</version>

			<!-- JUnit 5 support -->
			<dependencies>
				<dependency>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-junit5-plugin</artifactId>
					<version>1.2.3</version>
				</dependency>
			</dependencies>
			<configuration>
				<!-- Only mutate code cover with two unit tests -->
				<targetClasses>
					<param>com.example.movie.wish.list.service.*</param>
					<param>com.example.movie.wish.list.controller.*</param>
				</targetClasses>

				<!-- Exclude everything not covered by these unit tests -->
				<excludedClasses>
					<param>com.example.movie.wish.list.*Application*</param>
					<param>com.example.movie.wish.list.*Config*</param>
					<param>com.example.movie.wish.list.model.*</param>
					<param>com.example.movie.wish.list.repository.*</param>
					<param>com.example.movie.wish.list.model.Wishlist*</param>

				</excludedClasses>

				<!-- Only run two unit test classes -->
				<targetTests>
					<param>com.example.movie.wish.list.unit.*</param>
				</targetTests>

				<!-- Keep IT/E2E out -->
				<excludedTestClasses>
					<param>**/*IT</param>
					<param>**/*E2ETest</param>
				</excludedTestClasses>

				<!-- Strong requirements -->
				<mutationThreshold>100</mutationThreshold>
				<coverageThreshold>100</coverageThreshold>

				<mutators>DEFAULTS</mutators>
				<threads>1</threads>
				<failWhenNoMutations>true</failWhenNoMutations>
				<timestampedReports>false</timestampedReports>
				<outputFormats>
					<param>HTML</param>
					<param>XML</param>
				</outputFormats>

				<!-- Java 21 needs opens for PIT's instrumentation -->
				<jvmArgs>
					<jvmArg>--add-opens=java.base/java.lang=ALL-UNNAMED</jvmArg>
					<jvmArg>--add-opens=java.base/java.util=ALL-UNNAMED</jvmArg>
					<jvmArg>-Djava.awt.headless=true</jvmArg>
					<jvmArg>-Xmx1024m</jvmArg>
				</jvmArgs>

			</configuration>
		</plugin>

<!-- PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT PIT  -->


<!-- Code Cov.  Code Cov.  Code Cov.  Code Cov.  Code Cov.  Code Cov.  Code Cov.  Code Cov.  Code Cov.  Code Cov. -->
		<plugin>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>0.8.13</version>

			<configuration>
			</configuration>
			<executions>
				<execution>
					<id>prepare-agent</id>
					<goals>
						<goal>prepare-agent</goal>
					</goals>
				</execution>
				<execution>
					<id>report</id>
					<phase>test</phase>
					<goals>
						<goal>report</goal>
					</goals>

					<configuration>
						<excludes>
							<exclude>com/example/movie/wish/list/MovieWishListApplication*</exclude>
							<exclude>com/example/movie/wish/list/model/Wishlist*</exclude>
						</excludes>
					</configuration>

				</execution>
			</executions>
		</plugin>

<!-- Code Cov.  Code Cov.  Code Cov.  Code Cov.  Code Cov.  Code Cov.  Code Cov.  Code Cov.  Code Cov.  Code Cov. -->


		<!-- Start/stop Docker Compose for integration/E2E tests -->
    <plugin>
      <groupId>com.dkanejs.maven.plugins</groupId>
      <artifactId>docker-compose-maven-plugin</artifactId>
      <version>4.0.0</version>
      <executions>
        <!-- Start services before integration-test phase -->
        <execution>
          <id>docker-compose-up</id>
          <phase>pre-integration-test</phase>
          <goals>
            <goal>up</goal>
          </goals>
        </execution>
        <!-- Stop services after verify phase -->
        <execution>
          <id>docker-compose-down</id>
          <phase>post-integration-test</phase>
          <goals>
            <goal>down</goal>
          </goals>
        </execution>
      </executions>
      <configuration>
    <composeFile>${project.basedir}/docker-compose.yml</composeFile>
        <detachedMode>true</detachedMode>
        <build>true</build>
      </configuration>
    </plugin>

    <!-- Failsafe for IT/E2E tests -->
<plugin>
  <groupId>org.apache.maven.plugins</groupId>
  <artifactId>maven-failsafe-plugin</artifactId>
	<version>3.2.5</version>
	<executions>
    <execution>
      <goals>
        <goal>integration-test</goal>
        <goal>verify</goal>
      </goals>
    </execution>
  </executions>
  <configuration>
	  <includes>
      <include>**/*IT.java</include>
      <include>**/*E2ETest.java</include>
    </includes>
    <forkedProcessTimeoutInSeconds>120</forkedProcessTimeoutInSeconds>
  </configuration>
</plugin>
	</plugins>
</build>
</project>
