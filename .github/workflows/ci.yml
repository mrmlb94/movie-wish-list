name: CI Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Verify Java Version
        run: java -version

      - name: Set up Maven
        uses: s4u/setup-maven-action@v1.18.0

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Run Tests
        run: mvn test

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Start Docker Compose
        run: docker-compose up -d
        env:
          SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/moviesCollection

      - name: Wait for MongoDB
        run: |
          until docker inspect --format='{{json .State.Health.Status}}' $(docker-compose ps -q mongodb) | grep -q '"healthy"'; do
            echo "Waiting for MongoDB to be healthy..."
            sleep 5
          done

      - name: Run Integration Tests
        run: |
          curl --fail http://localhost:8080 || exit 1

      - name: Stop Docker Compose
        if: always()
        run: docker-compose down

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v1
        with:
          dockerfile: Dockerfile

      - name: Lint Docker Compose File
        run: |
          docker-compose config