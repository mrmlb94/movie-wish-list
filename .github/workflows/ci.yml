name: Java CI with Maven and Docker Compose

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/moviesCollection

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build the JAR file (skip tests for now)
      - name: Build JAR file explicitly
        run: mvn clean package -DskipTests

      # Step 5: Start services via Docker Compose
      - name: Start backend and MongoDB via Docker Compose
        run: |
          docker compose up -d --build
          sleep 30

      # Step 6: Show logs for troubleshooting
      - name: Show Docker Compose Logs
        run: docker compose logs

      # Step 7: Run Integration Tests
      - name: Run Integration and Unit Tests
        run: mvn clean verify -P skip-e2e-tests

      # Step 8: Confirm JaCoCo report file exists
      - name: Confirm JaCoCo report file exists
        run: ls -la ./target/site/jacoco

      # Step 9: Upload coverage reports to Codecov (if applicable)
      - name: Upload JaCoCo coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./target/site/jacoco/jacoco.xml
          fail_ci_if_error: true
          verbose: true

      # Step 10: Stop and remove Docker Compose services
      - name: Stop and Remove Docker Compose Services
        if: always()
        run: docker compose down